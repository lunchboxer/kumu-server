{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/components/Login.svelte",
    "../src/components/ClassSessionListRow.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte'\n  import { auth } from '../data/auth'\n  import { request } from '../data/fetch-client'\n  import { STUDENTS } from '../data/queries'\n\n  let students = []\n  let searchString = ''\n  let selected = ''\n  let password = ''\n  let passwordConfirm = ''\n  let passwordsMatch = true\n\n  onMount(async () => {\n    try {\n      const response = await request(STUDENTS)\n      students = response.students\n    } catch (error) {\n      console.error(error)\n    }\n  })\n\n  const reload = async () => {\n    const response = await request(STUDENTS, { searchString })\n    students = response.students\n  }\n\n  const checkPasswords = () => {\n    if (!passwordConfirm) return\n    passwordsMatch = password === passwordConfirm\n  }\n\n  const register = async () => {\n    checkPasswords()\n    if (!password || !passwordConfirm || !passwordsMatch) return\n    try {\n      await auth.register(selected, password)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const login = async () => {\n    if (!password) return\n    try {\n      await auth.login(selected, password)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  $: selectedStudent = students.find(s => s.id === selected)\n</script>\n\n<style>\n  p.error {\n    font-size: 1rem;\n    margin: 0;\n    padding: 0;\n    color: red;\n  }\n</style>\n\n<div>\n  <h2>Login</h2>\n\n  <label>Search by student's name</label>\n  <input type=\"text\" bind:value={searchString} on:input={reload} />\n\n  {#if students && students.length > 0}\n    <p>{students.length} matching students</p>\n    <select bind:value={selected}>\n      <option>Select a student</option>\n      {#each students as student (student.id)}\n        <option value={student.id}>\n          {student.englishName} \n          {#if student.chineseName}\n            ({student.chineseName})\n          {/if}\n        </option>\n      {/each}\n    </select>\n  {/if}\n</div>\n\n{#if selected}\n  {#if !selectedStudent.lastLogin}\n    <label>Create a password</label>\n    <input type=\"password\" bind:value={password} on:change={checkPasswords}>\n\n    <label>Confirm password</label>\n    {#if !passwordsMatch}\n      <p class='error'>Passwords don't match.</p>\n    {/if}\n    <input type=\"password\" bind:value={passwordConfirm} \n      on:change={checkPasswords}>\n    \n\n    <button on:click={register}>Register</button>\n  {:else}\n    <label>Password</label>\n    <input type=\"password\" bind:value={password} />\n\n    <button on:click={login}>Log in</button>\n  {/if}\n{/if}",
    "<script>\n  import { formatRelative } from 'date-fns'\n  export let attendance\n\n  const format = (date) => {\n    if (!date) return\n    return formatRelative(new Date(date), new Date())\n  }\n</script>\n\n<style>\n  p {\n    margin: 0;\n  }\n\n  .lesson {\n    margin: 1rem 0;\n  }\n</style>\n\n<div class=\"lesson\">\n  <p>\n    <a href=\"#/session/{attendance.classSession.id}\">\n      {attendance.classSession.group.name} class lesson\n      {attendance.classSession.number}\n      {#if attendance.classSession.lesson}\n      - {attendance.classSession.lesson.name}\n      {/if}\n    </a>\n    {#if attendance.status !== 'Present'}\n      ({attendance.status.toLowerCase()})\n    {/if}\n  </p>\n  <p>\n    {#if !attendance.classSession.endedAt}\n      Scheduled to end {format(attendance.classSession.endsAt)}\n    {:else if attendance.classSession.endedAt}\n      {format(attendance.classSession.endedAt)}\n    {/if}\n  </p>\n</div>"
  ],
  "names": [],
  "mappings": "AAuDE,CAAC,MAAM,eAAC,CAAC,AACP,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,KAAK,CAAE,GAAG,AACZ,CAAC;ACjDD,CAAC,cAAC,CAAC,AACD,MAAM,CAAE,CAAC,AACX,CAAC,AAED,OAAO,cAAC,CAAC,AACP,MAAM,CAAE,IAAI,CAAC,CAAC,AAChB,CAAC"
}